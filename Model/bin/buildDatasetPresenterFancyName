#!/usr/bin/perl

use strict;

use File::Temp qw/ tempdir /;

use Data::Dumper;

use Getopt::Long qw(GetOptions);

use EbrcModelCommon::Model::tmUtils;

use DBI;

#my ($propfile, $instance, $schema, $suffix, $debug);
my ($propfile, $instance, $schema, $suffix, $prefix, $filterValue, $debug, $report);
Getopt::Long::Configure("pass_through");
GetOptions("propfile=s" => \$propfile,
           "instance=s" => \$instance,
           "schema=s" => \$schema,
           "suffix=s" => \$suffix,
           "prefix=s" => \$prefix,
           "filterValue=s" => \$filterValue,
           "debug!" => \$debug,
           "report!" => \$report,
	  );
die "required parameter missing" unless ($propfile && $instance && ($suffix || $report));

my $PROJECT_HOME = $ENV{PROJECT_HOME};

my $dbh = EbrcModelCommon::Model::tmUtils::getDbHandle($instance, $schema, $propfile);

$|=1;


# create table
#  &createEmptyTable($dbh,$suffix);


# insert statement examples
#  my $insertStatement = "INSERT INTO GbrowseTracksOrganism$suffix (organism, type, gtracks) VALUES (?,?,?)";
#  my $insertRow = $dbh->prepare($insertStatement);


# query 
  # species, datasetpresenter name, datasetpresenter id
my $sql = <<SQL;
    select
        dnt.dataset_presenter_id,
        dsp.display_name,
        oa.species
    from
        apidbtuning.datasetnametaxon dnt,
        apidbtuning.organismattributes oa,
        apidbtuning.datasetpresenter dsp
    where 
        dnt.taxon_id = oa.component_taxon_id (+)
        and dnt.dataset_presenter_id = dsp.dataset_presenter_id
SQL
 
my $sh = $dbh->prepare($sql);
$sh->execute() or die "Can't prepare SQL statement: $DBI::errstr\n";



# loop over rows dataset_presenter_id, display_name, species
while(my ($dpid, $name, $species) = $sh->fetchrow_array()) {
  
  # Enclose species name in italics tags 
  if($species ne '') {
    if($name =~ m/$species/) {
      print "$name\t";
      $name =~ s/$species/<i>$species<\/i>/g;
      print "$name\n";
    }

    # Try matching shortened species name (ex. P. falciparum)
    my ($short_species) = $species =~ s/^(\w)\w*(\s+\w+)*/$1.$2/r;
    if($name =~ m/$short_species/) {
      print "$name\t";
      $name =~ s/$short_species/<i>$short_species<\/i>/g;
      print "$name\n";
    }
  }


  # insert into table
  # $insertRow->execute($dpid, $name, $species) or die "Can't execute SQL statement: $DBI::errstr\n";
   
}
$sh->finish();
#$insertRow->finish();

# create indexes if needed (prrobalby not)
#&createIndex($dbh, $suffix);
#$dbh->commit(); # could roll back your changes (to remove the table you would need to $dhb->do("drop table GbrowseTracksOrganism") or die "";
$dbh->disconnect();


#example
# sub createEmptyTable {
#      my ($dbh, $suffix) = @_;

#     $dbh->do(<<SQL) or die "creating table";
#      create table GbrowseTracksOrganism$suffix (
# 	organism     varchar2(80),
#         type         varchar2(20),
# 	gtracks      varchar2(2000)
#   ) nologging
# SQL
# $dbh->{PrintError} = 0;

# }

# example
# sub createIndex {
#      my ($dbh, $suffix) = @_;

#     $dbh->do(<<SQL) or die "creating index";
#      create index gto_ix$suffix on GbrowseTracksOrganism$suffix (organism, type, gtracks)
# SQL
# $dbh->{PrintError} = 0;
#}


1;

